version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: development
    container_name: autoria_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development

      # Database Neon
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_SSL=${DATABASE_SSL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}

    depends_on:
      - redis

    networks:
      - autoria_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: autoria_pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - autoria_pgadmin_data:/var/lib/pgadmin

    networks:
      - autoria_network

  redis:
    image: redis:alpine
    container_name: autoria_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - autoria_redis_data:/data
    networks:
      - autoria_network

  autoria-clon-s3:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    restart: unless-stopped
    ports:
      - "8000:9000"
      - "8001:9001"
    volumes:
      - ./autoria_api_s3_data:/usr/src/app/s3
    environment:
      - MINIO_ROOT_USER=user            # AWS_S3_ACCESS_KEY
      - MINIO_ROOT_PASSWORD=password    # AWS_S3_SECRET_KEY

networks:
  autoria_network:
    driver: bridge

volumes:
  autoria_pgadmin_data:
  autoria_redis_data:

